[
	[
		{
			"text": "\n/*\n\nsemua @vertex harus ada @builtin(instance_index)\n\n*/\n\n\n\nstruct stmisc{\n\tpersp:mat4x4f,\n\tpivot:mat4x4f,\n\tcam:mat4x4f,\n\tinvcam:mat4x4f,\n\tview:mat4x4f, // = persp*invcam\n\tnow:u32,\n\tseek:f32,\n\tfreecam:u32,\n\tprevseek:f32,\n\tranfl:f32,\n}\n@group(0) @binding(0) var<uniform> misc:stmisc;\n//@group(0) @binding(1) var<storage> aniresoread:array<mat4x4f>;\n@group(0) @binding(3) var<storage> camresoread:array<mat4x4f>;\n@group(0) @binding(4) var<storage> gloresoread:array<mat4x4f>;\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "155",
					"b": "155",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n//dari js Math.PI.toFixed(100)\nconst pi = 3.141592653589793115997963468544185161590576171875;\nconst matide = mat4x4f(\n\t1,0,0,0,\n\t0,1,0,0,\n\t0,0,1,0,\n\t0,0,0,1,\n);\n\nconst m_arahsiang = mat4x4f(0.808, -0.479, 0.342, 0, 0.442, 0.878, 0.187, 0, -0.389, 0, 0.921, 0, 0, 0, 0, 1);\n//const m_arahmalam = mat4x4f(-0.498, 0.841, -0.21, 0, -0.775, -0.54, -0.328, 0, -0.389, 0, 0.921, 0, 0, 0, 0, 1);\n\n//arah sumber matahari\nconst arahsiang = normalize(m_arahsiang[1].xyz); //vec3f(.2,.3,.2,);\n//const arahmalam = normalize(m_arahmalam[1].xyz);;\n\nconst wbs = vec4f(.4,.4,.4,.45,); //warna belakang siang\nconst wds = vec4f(.9,.9,.9,.25,); //warna depan siang\n//const wbm = vec4f(.0,.0,.0,.7,); //warna belakang malam\n//const wdm = vec4f(.0,.0,.0,.9,); //warna depan malam\n\n\n\nconst tp = vec4f(.9,.9,.0,1.,);\n\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@vertex fn tanah_vert(\n\t@location(0) p:vec3f,\n\t\n\t//@builtin(vertex_index) vi:u32,\n\t@builtin(instance_index) ii_:u32,\n)-> tanah_out {\n\tlet pout = vec4f(p,1.,);\t\n\treturn tanah_out(\n\t\tfcam()*pout,\n\t\tpout,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "122",
					"g": "188",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nstruct tanah_out{\n\t@builtin(position) posout:vec4f,\n\t@location(0) p:vec4f,\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "122",
					"b": "122",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@fragment fn tanah_frag(\n\to:tanah_out,\n)-> @location(0) vec4f {\n\tlet x = o.p.x;\n\tlet y = o.p.y;\n\tlet z = o.p.z;\n\tlet seek = misc.seek;\n\t\n\treturn select(\n\t\tselect(\n\t\t\tvec4f(1.,.8,.4,1.9,),\n\t\t\tvec4f(.8,.7,.3,1.9,),\n\t\t\tcorak0(o.p.xyz),\n\t\t\t//sin(sin(x*z)) < pow(5.,sin(z*sin(x+y)),)*sin(9.*x), //ini rapi\n\t\t\t//tan(x*z) < sin(z),\n\t\t),\n\t\tselect(\n\t\t\tvec4f(.85,.75,.4,1.9,),\n\t\t\tvec4f(.75,.65,.3,1.9,),\n\t\t\t//sin(x*z-z)+cos(z*z) < atan(x*z),\n\t\t\tsin(x)%cos(x) < sin(z),\n\t\t\t//x*x+z*z < tan(200.*z/x),\n\t\t),\n\t\ttan(x+pow(.7,z,)) < sin(z+pow(1.,x,)+.2*x),\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "88",
					"g": "255",
					"b": "88",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@vertex fn panah_vert(\n\t\n\t@location(0) pos:vec3f,\n\t\n\t@builtin(instance_index) ii_:u32, //semua @vertex harus ada @builtin(instance_index)\n)-> panah_out {\n\t\n\tvar pout = vec4f(pos,1.,);\n\t\n\treturn panah_out(\n\t\tfcam()*camresoread[1]*pout,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "0",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nstruct panah_out{\n\t@builtin(position) posout:vec4f,\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "0",
					"g": "188",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@fragment fn panah_frag(\n)-> @location(0) vec4f {\n\treturn vec4f(\n\t\tvec3f(sin(misc.seek*11.)+.5),\n\t\t.1,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "0",
					"g": "122",
					"b": "255",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@vertex fn kain0_vert(\n\t\n\t@location(0) jw:vec4u, //3 joints 1 weight\n\t@location(1) nor:vec4f,\n\t@location(2) pos:vec3f,\n\t\n\t@builtin(instance_index) ii_:u32,\n)-> kain0_out {\n\t\n\tvar pout = vec4f(pos,1.,);\n\t\n\tlet wei = weiarr[jw[3]];\n\tlet mout =\n\t\tgloresoread[jw[0]]*wei.x+\n\t\tgloresoread[jw[1]]*wei.y+\n\t\tgloresoread[jw[2]]*wei.z\n\t;\n\t\n\tlet nout = fnor(mout,nor.xyz,);\n\t\n\tpout = mout*pout;\n\t\n\treturn kain0_out(\n\t\tfcam()*pout,\n\t\tpos,\n\t\tnout,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "188",
					"b": "0",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nstruct kain0_out{\n\t@builtin(position) posout:vec4f,\n\t@location(14) p0:vec3f,\n\t@location(5) nor:vec3f,\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "188",
					"b": "122",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@fragment fn kain0_frag(\n\to:kain0_out,\n)-> @location(0) vec4f {\n\tlet wa = vec4f(.1,.1,.1,.5,);\n\tvar wa1 = wa*select(\n\t\t1.,\n\t\t.8,\n\t\tcorak0(o.p0.xyz*5.),\n\t);\n\t\n\tlet wa_out = fsinar(wa1.rgb,o.nor,);\n\treturn vec4f(wa_out,wa.a,) +vec4f(-o.p0.x*.02);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "188",
					"b": "155",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@vertex fn chara0_vert(\n\t\n\t@location(0) jw:vec4u, //3 joints 1 weight\n\t@location(1) nor:vec4f,\n\t@location(2) pos:vec3f,\n\t@location(3) tex:vec2f,\n\t\n\t@builtin(instance_index) ii_:u32,\n)-> chara0_out {\n\tlet seekcast = bitcast<u32>(misc.seek);\n\t\n\tvar pout = vec4f(pos,1.,);\n\t\n\tlet wei = weiarr[jw[3]];\n\tvar mout =\n\t\tgloresoread[jw[0]]*wei.x+\n\t\tgloresoread[jw[1]]*wei.y+\n\t\tgloresoread[jw[2]]*wei.z\n\t;\n\t//mout = matide;\n\tlet nout = fnor(mout,nor.xyz,);\n\t\n\tpout = mout*pout;\n//sampe sini, bikin kejangkejang bocchi\n\tpout += vec4f(vec3f(\n\t\tacakbit(pout.yzx,seekcast,),\n\t\tacakbit(pout.zxy,seekcast,),\n\t\tacakbit(pout.zyx,seekcast,),\n\t)*1.5*f32(58. < misc.seek),.0,);\n\t\n\treturn chara0_out(\n\t\tfcam()*pout,\n\t\tpos,\n\t\tnout,\n\t\ttex,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "0",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nstruct chara0_out{\n\t@builtin(position) posout:vec4f,\n\t@location(14) p0:vec3f,\n\t@location(5) nor:vec3f,\n\t@location(1) tex:vec2f,\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "188",
					"g": "188",
					"b": "88",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@fragment fn chara0_frag(\n\to:chara0_out,\n)-> @location(0) vec4f {\n\treturn palette0(\n\t\to.p0*5.,\n\t\to.nor,\n\t\to.tex,\n\t);\n}\n\n\n\nfn palette0(\n\tp0:vec3f,\n\tnor:vec3f,\n\ttex:vec2f,\n)-> vec4f {\n\tlet x = tex.x;\n\tlet y = tex.y;\n\t\n\tlet ffF = vec4f(.398,.308,.251,1.,);\n\tlet ffT = vec4f(1.,);\n\tlet ggF = vec4f(.305,.309,.6,1.,);\n\tlet ggT = vec4f(.424,.166,.397,1.,);\n\tlet hhF = vec4f(1.,.0,.0,1.,);\n\tlet hhT = vec4f(.0,1.,.0,1.,);\n\tlet iiF = vec4f(.574,.545,.545,1.,);\n\tlet iiT = vec4f(1.,.982,.687,1.,);\n\tlet jjF = vec4f(.014,.0,1.,1.,);\n\tlet kkF = vec4f(.397,.0,.0,1.,);\n\tlet kkT = vec4f(.0,.0,.0,1.,);\n\tlet mmF = belahapokat(p0);\n\tlet mmT = vec4f(.331,.578,.007,1.,);\n\tlet nnF = vec4f(.811,1.,.092,1.,);\n\tlet nnT = vec4f(.731,.882,.09,1.,);\n\t\n\tlet nn = select(nnF,nnT,\t\ty > 13.\t\t);\n\tlet mm = select(mmF,mmT,\t\ty > 11.\t\t);\n\tlet ll = select(mm,nn,\t\ty > 12.\t\t);\n\tlet kk = select(kkF,kkT,\t\ty > 10.\t\t);\n\tlet jj = select(jjF,ll,\t\ty > 10.\t\t);\n\tlet ii = select(iiF,iiT,\t\ty > -10.\t\t);\n\tlet hh = select(hhF,hhT,\t\ty > -10.\t\t);\n\tlet gg = select(ggF,ggT,\t\tx > 10.\t\t);\n\tlet ff = select(ffF,ffT,\t\tx > 10.\t\t);\n\tlet ee = select(jj,kk,\t\tx > -10.\t\t);\n\tlet dd = select(hh,ii,\t\tx > -10.\t\t);\n\tlet cc = select(ff,gg,\t\ty > .0\t\t);\n\tlet bb = select(dd,ee,\t\ty > .0\t\t);\n\tlet aa = select(bb,cc,\t\tx > .0\t\t);\n\t\n\t\n\t\n\t\n\tlet wa = aa;\n\tvar wa1 = wa /* *select(\n\t\t1.,\n\t\t.9,\n\t\tcorak0(p0*5.),\n\t) */ ;\n\t\n\tlet wa_out = fsinar(wa1.rgb,nor,);\n\treturn vec4f(wa_out,wa.a,) ;\n\t//return vec4f(aa);\n}\n\n\nfn belahapokat(\n\tp0:vec3f,\n)-> vec4f {\n\tlet ijo = vec4f(.0,.363,.046,1.,);\n\tlet mulai0 = 1.8865+9.;\n\tlet mulai1 = 1.889+9.;\n\t\n\tlet belah = -.05 < p0.z+sin((p0.x+p0.y)*66.)*.01;\n\tlet p1 = p0*11.;\n\tlet getar = p0.z+5. < tan(pow(-p1.z,2.,)*.07+p1.y);\n\t\n\treturn ijo\n\t+fxfade(mulai0,p0,getar,)\n\t+fxfade(mulai1,p0,belah,);\n}\n\n\n\nfn fxfade(\n\tmulai:f32,\n\tp0:vec3f,\n\tmuncul:bool,\n)-> vec4f {\n\tlet t0 = misc.seek-mulai;\n\treturn vec4f(\n\t\tf32(\n\t\t\tmuncul && p0.y*.0001 < t0\n\t\t)\n\t\t*clamp(1.-t0*444.,.0,1.,)\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "155",
					"g": "155",
					"b": "155",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@vertex fn subtitle_vert(\n\t\n\t@location(0) start:f32,\n\t@location(1) len:f32,\n\t@location(2) pos:vec3f,\n\t\n\t@builtin(instance_index) ii_:u32,\n)-> subtitle_out {\n\t\n\tvar pout =\n\t\tvec4f(pos,1.,)\n\t\t*f32(start < misc.seek && misc.seek < start+len)\n\t;\n\t\n\treturn subtitle_out(\n\t\tpout,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "155",
					"g": "122",
					"b": "222",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nstruct subtitle_out{\n\t@builtin(position) posout:vec4f,\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "0",
					"g": "155",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@fragment fn subtitle_frag(\n\t\n)-> @location(0) vec4f {\n\treturn vec4f(1.);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "188",
					"g": "188",
					"b": "255",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@vertex fn bunga_vert(\n\t\n\t@location(0) nor:vec4f,\n\t@location(1) posv:vec3f,\n\t\n\t@location(2) petik:f32, ///mulai petik\n\t@location(3) posinst:vec3f,\n\t\n\t@builtin(instance_index) ii_:u32,\n)-> bunga_out {\n\t\n\tlet fii = f32(ii_);\n\tlet mesh = u32(3. < posv.y); //1u = bunga atas\n\tvar pout = vec4f(posv,1.,);\n\tvar m = array(\n\t\tputarY(f32(ii_)),\n\t\tmatide,\n\t)[mesh];\n\tm[3] = vec4f(posinst,1.,);\n\t\n\tpout = m*pout;\n\n\n\n//animasi goyang +++++\n\nlet a5 = (misc.ranfl+fii*.237)%1.;\nlet seek = mix(misc.seek,misc.prevseek,a5,);\nlet seekpetik = seek-petik;\nlet a4 = sin(fii*2.1+seek*.4); //kecepatan0\nlet a3 = sin(fii)+7.; //kecepatan1\nlet a0 = pow(max(pout.y,.0,),2.,); //lengkung\nlet a1 = sin(fii+seek*a3)*.02*a4; //timer\nlet a2 = .05; //tarik\npout.x += a0*(a1+a2); //hasil\n\n//++++++++++++++++++\n\n\n\n//animasi bunga +++++\nvar m1 = matide;\n\n\n\n\n\n//awal\nvar p2 = vec4f(posinst,1.,);\t\tm1[3] = p2;\n\n//naik\np2.y += 8.;\t\tm1[3] = mix(m1[3],p2,\t\tcublerp(seekpetik-.0)\t\t,);\n\n//kumpul\np2 = vec4f(.7,3.7,-1.5,1.,);\t\tm1[3] = mix(m1[3],p2,\t\tcublerp((seekpetik-5.6)*(.3+(fii%.2924)))\t\t,);\n\n//hilang\np2 = m1[3];\t\tm1 *= mix(1.,.0,\t\tcublerp((misc.seek-33.3)*1.4)\t\t,);\t\tm1[3] = p2;\n\n//jadi pecut - muncul\nlet bjp = 40.031; //batas jadi pecut\nlet jadipecut0 = bjp < misc.seek;\np2 = vec4f(.0,47.,3.5,1.,);\t\tm1 = array(m1,matide,)[u32(jadipecut0)];\t\tm1[3] = select(m1[3],p2,jadipecut0,);\n\n//jadi pecut - baris, slepet\nm1 = anisle(m1,bjp,fii,);\n\n//semua bunga mengecil & hilang\nlet s = cublerp(1.-(misc.seek-41.148));\nm1[0u][0u] *= s;\nm1[1u][1u] *= s;\nm1[2u][2u] *= s;\n\n\n\n\n\n\n//\nm1 *= putarY(max(.0,(seekpetik-.8)*3.,));\nvar p1 = vec4f(posv,1.,);\np1.y -= 3.;\np1 = m1*p1;\np1 = mix(pout,p1,\t\tcublerp(seekpetik)\t\t,); //dari goyang ke tetap\n\n//++++++++++++++++++\n\n\n\n\n\tpout = select(pout,p1,bool(mesh),);\n\tm = array(m,m1,)[mesh];\n\tlet nout = fnor(m,nor.xyz,);\n\treturn bunga_out(\n\t\tfcam()*pout,\n\t\tnout,\n\t\tmesh,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "122",
					"g": "255",
					"b": "122",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nstruct bunga_out{\n\t@builtin(position) posout:vec4f,\n\t@location(0) nor:vec3f,\n\t@location(1) @interpolate(flat) mesh:u32,\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "122",
					"g": "188",
					"b": "122",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@fragment fn bunga_frag(\n\to:bunga_out,\n)-> @location(0) vec4f {\n\tlet nor = o.nor;\n\tlet mesh = o.mesh;\n\t\n\tlet wa1 = select(\n\t\tvec4f(.0,.5,.0,1.,),\n\t\tvec4f(.5,.0,.5,1.,),\n\t\tbool(mesh),\n\t);\n\tlet wa_out = fsinar(wa1.rgb,nor,);\n\treturn vec4f(wa_out,wa1.a,);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "122",
					"g": "155",
					"b": "122",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn anisle(// animasi slepet\n\tm:mat4x4f,\n\tbjp:f32,\n\tfii:f32,\n)->mat4x4f{\n\tvar m1 = m;\n\tlet t = misc.seek-bjp; //t lokal\n\t\n//\t\t40.8 -->> batas naik\n\n\tlet turun = fii*.2  -pow(\t\tmax(.0,t-.7,)*22.\t\t,2.,);\n\t//let naik = -fii*.2  -pow(\t\t(.0)*22.\t\t,2.,); //awal\n\tlet naik = -4.-fii*.5  +(misc.seek-40.8)*111.; //baru\n\t\n\tlet ysle = max(turun,naik,); //y lokal\n\tlet p2 = vec4f(.0,50. +ysle ,8.5,1.,);\n\tm1[3] = mix(m1[3],p2,\t\tclamp(t*(6./(fii*.0023+.4)),.0,1.,)\t\t,);\n\t\n\tlet s = mix(.0,1.7,tanh(-turun+naik)*.5+.5,);\n\tm1[0u][0u] += s;\n\tm1[1u][1u] += s;\n\tm1[2u][2u] += s;\n\t\n\treturn m1;\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "188",
					"g": "188",
					"b": "155",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n//anisle asli -->>\n",
			"visible": true,
			"time": "2009738.0186805038",
			"speed": "22.288288288288296",
			"running": true,
			"color": [
				{
					"r": "155",
					"g": "122",
					"b": "255",
					"frame": "0"
				},
				{
					"r": "155",
					"g": "122",
					"b": "255",
					"frame": "1"
				},
				{
					"r": "0",
					"g": "255",
					"b": "255",
					"frame": "2"
				},
				{
					"r": "0",
					"g": "255",
					"b": "255",
					"frame": "3"
				}
			]
		},
		{
			"text": "\n/*========\nfn anisle(\n\tm:mat4x4f,\n\tbjp:f32,\n\tfii:f32,\n)->mat4x4f{\n\tvar m1 = m;\n\t//sle -->> slepet\n\tvar tsle = tanh((misc.seek-bjp-.9)*11.)*11.+22.;\n\t\n\ttsle = fii*.2-(tsle-1.); //time tiap bunga\n\t\n\tlet ysle = abs(tsle); //y lokal\n\tlet p2 = vec4f(.0,50. +ysle ,8.5,1.,);\n\tm1[3] = mix(m1[3],p2,\t\tclamp((misc.seek-bjp)*(6./(fii*.0023+.4)),.0,1.,)\t\t,);\n\t\n\tlet s = mix(.0,1.7,tanh(-tsle*2.7)*.5+.5,);\n\tm1[0u][0u] += s;\n\tm1[1u][1u] += s;\n\tm1[2u][2u] += s;\n\t\n\treturn m1;\n}\n--------*/\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "155",
					"g": "122",
					"b": "255",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@vertex fn duar_vert(\n\t@location(0) p:vec3f,\n\t\n\t//@builtin(vertex_index) vi:u32,\n\t@builtin(instance_index) ii_:u32,\n)-> duar_out {\n\tlet p1 = p*max(misc.seek-41.143,.0,)*222. +vec3f(.0,.0,8.5,);\n\tlet pout = vec4f(p1,1.,);\n\t\n\treturn duar_out(\n\t\tfcam()*pout,\n\t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "88",
					"g": "88",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nstruct duar_out{\n\t@builtin(position) posout:vec4f,\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "155",
					"g": "155",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n@fragment fn duar_frag(\n\t\n)-> @location(0) vec4f {\n\t\n\tlet t = misc.seek-41.143;\n\treturn vec4f(vec3f(1.),1.-t,);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "188",
					"g": "188",
					"b": "255",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "\n/*\n\n\n\n\n\n\n\n\n\n\n*/\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		}
	],
	[
		{
			"text": "",
			"visible": false,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nconst weiarr = array(\n\nvec3f(0.577350,0.577350,0.577350,), //0  \nvec3f(0.590167,0.590167,0.550823,), //1  \nvec3f(0.603877,0.563619,0.563619,), //2  \nvec3f(0.602901,0.602901,0.522514,), //3  \nvec3f(0.617540,0.576371,0.535201,), //4  \nvec3f(0.632175,0.547885,0.547885,), //5  \nvec3f(0.615457,0.615457,0.492366,), //6  \nvec3f(0.631055,0.588984,0.504844,), //7  \nvec3f(0.646696,0.560470,0.517357,), //8  \nvec3f(0.662266,0.529813,0.529813,), //9  \nvec3f(0.627730,0.627730,0.460336,), //10 \nvec3f(0.644305,0.601351,0.472490,), //11 \nvec3f(0.660979,0.572848,0.484718,), //12 \nvec3f(0.677631,0.542105,0.496929,), //13 \nvec3f(0.694117,0.509019,0.509019,), //14 \nvec3f(0.639602,0.639602,0.426401,), //15 \nvec3f(0.657162,0.613351,0.438108,), //16 \nvec3f(0.674882,0.584898,0.449921,), //17 \nvec3f(0.692636,0.554109,0.461757,), //18 \nvec3f(0.710271,0.520865,0.473514,), //19 \nvec3f(0.727607,0.485071,0.485071,), //20 \nvec3f(0.650945,0.650945,0.390567,), //21 \nvec3f(0.669483,0.624851,0.401690,), //22 \nvec3f(0.688247,0.596481,0.412948,), //23 \nvec3f(0.707107,0.565685,0.424264,), //24 \nvec3f(0.725901,0.532327,0.435540,), //25 \nvec3f(0.744437,0.496292,0.446663,), //26 \nvec3f(0.762493,0.457496,0.457496,), //27 \nvec3f(0.661622,0.661622,0.352865,), //28 \nvec3f(0.681115,0.635707,0.363261,), //29 \nvec3f(0.700904,0.607450,0.373816,), //30 \nvec3f(0.720854,0.576683,0.384456,), //31 \nvec3f(0.740797,0.543251,0.395092,), //32 \nvec3f(0.760530,0.507020,0.405616,), //33 \nvec3f(0.779813,0.467888,0.415900,), //34 \nvec3f(0.798369,0.425797,0.425797,), //35 \nvec3f(0.671492,0.671492,0.313363,), //36 \nvec3f(0.691898,0.645772,0.322886,), //37 \nvec3f(0.712671,0.617649,0.332580,), //38 \nvec3f(0.733674,0.586939,0.342381,), //39 \nvec3f(0.754732,0.553470,0.352208,), //40 \nvec3f(0.775632,0.517088,0.361961,), //41 \nvec3f(0.796117,0.477670,0.371521,), //42 \nvec3f(0.815892,0.435143,0.380750,), //43 \nvec3f(0.834622,0.389490,0.389490,), //44 \nvec3f(0.680414,0.680414,0.272166,), //45 \nvec3f(0.701670,0.654892,0.280668,), //46 \nvec3f(0.723364,0.626916,0.289346,), //47 \nvec3f(0.745356,0.596285,0.298142,), //48 \nvec3f(0.767467,0.562809,0.306987,), //49 \nvec3f(0.789474,0.526316,0.315790,), //50 \nvec3f(0.811107,0.486664,0.324443,), //51 \nvec3f(0.832050,0.443760,0.332820,), //52 \nvec3f(0.851943,0.397573,0.340777,), //53 \nvec3f(0.870388,0.348155,0.348155,), //54 \nvec3f(0.688247,0.688247,0.229416,), //55 \nvec3f(0.710271,0.662919,0.236757,), //56 \nvec3f(0.732798,0.635092,0.244266,), //57 \nvec3f(0.755689,0.604551,0.251896,), //58 \nvec3f(0.778761,0.571092,0.259587,), //59 \nvec3f(0.801784,0.534522,0.267261,), //60 \nvec3f(0.824475,0.494685,0.274825,), //61 \nvec3f(0.846499,0.451466,0.282166,), //62 \nvec3f(0.867472,0.404820,0.289157,), //63 \nvec3f(0.886969,0.354787,0.295656,), //64 \nvec3f(0.904534,0.301511,0.301511,), //65 \nvec3f(0.694862,0.694862,0.185296,), //66 \nvec3f(0.717547,0.669711,0.191346,), //67 \nvec3f(0.740797,0.642024,0.197546,), //68 \nvec3f(0.764471,0.611577,0.203859,), //69 \nvec3f(0.788383,0.578147,0.210235,), //70 \nvec3f(0.812296,0.541530,0.216612,), //71 \nvec3f(0.835917,0.501550,0.222911,), //72 \nvec3f(0.858898,0.458079,0.229039,), //73 \nvec3f(0.880830,0.411054,0.234888,), //74 \nvec3f(0.901263,0.360505,0.240337,), //75 \nvec3f(0.919709,0.306570,0.245256,), //76 \nvec3f(0.935674,0.249513,0.249513,), //77 \nvec3f(0.700140,0.700140,0.140028,), //78 \nvec3f(0.723364,0.675140,0.144673,), //79 \nvec3f(0.747203,0.647576,0.149441,), //80 \nvec3f(0.771517,0.617213,0.154303,), //81 \nvec3f(0.796117,0.583819,0.159223,), //82 \nvec3f(0.820764,0.547176,0.164153,), //83 \nvec3f(0.845154,0.507093,0.169031,), //84 \nvec3f(0.868927,0.463428,0.173785,), //85 \nvec3f(0.891657,0.416107,0.178332,), //86 \nvec3f(0.912871,0.365148,0.182574,), //87 \nvec3f(0.932055,0.310685,0.186411,), //88 \nvec3f(0.948683,0.252982,0.189737,), //89 \nvec3f(0.962250,0.192450,0.192450,), //90 \nvec3f(0.703985,0.703985,0.093865,), //91 \nvec3f(0.727607,0.679100,0.097014,), //92 \nvec3f(0.751882,0.651631,0.100251,), //93 \nvec3f(0.776671,0.621336,0.103556,), //94 \nvec3f(0.801784,0.587975,0.106905,), //95 \nvec3f(0.826977,0.551318,0.110264,), //96 \nvec3f(0.851943,0.511166,0.113592,), //97 \nvec3f(0.876309,0.467365,0.116841,), //98 \nvec3f(0.899640,0.419832,0.119952,), //99 \nvec3f(0.921443,0.368577,0.122859,), //100\nvec3f(0.941184,0.313728,0.125491,), //101\nvec3f(0.958315,0.255551,0.127775,), //102\nvec3f(0.972306,0.194461,0.129641,), //103\nvec3f(0.982683,0.131024,0.131024,), //104\nvec3f(0.706322,0.706322,0.047088,), //105\nvec3f(0.730189,0.681509,0.048679,), //106\nvec3f(0.754732,0.654101,0.050315,), //107\nvec3f(0.779813,0.623850,0.051987,), //108\nvec3f(0.805242,0.590511,0.053683,), //109\nvec3f(0.830773,0.553849,0.055385,), //110\nvec3f(0.856095,0.513657,0.057073,), //111\nvec3f(0.880830,0.469776,0.058722,), //112\nvec3f(0.904534,0.422116,0.060302,), //113\nvec3f(0.926703,0.370681,0.061780,), //114\nvec3f(0.946792,0.315597,0.063119,), //115\nvec3f(0.964236,0.257130,0.064282,), //116\nvec3f(0.978492,0.195698,0.065233,), //117\nvec3f(0.989071,0.131876,0.065938,), //118\nvec3f(0.995585,0.066372,0.066372,), //119\nvec3f(0.707107,0.707107,0.000000,), //120\nvec3f(0.731055,0.682318,0.000000,), //121\nvec3f(0.755689,0.654931,0.000000,), //122\nvec3f(0.780869,0.624695,0.000000,), //123\nvec3f(0.806405,0.591364,0.000000,), //124\nvec3f(0.832050,0.554700,0.000000,), //125\nvec3f(0.857493,0.514496,0.000000,), //126\nvec3f(0.882353,0.470588,0.000000,), //127\nvec3f(0.906183,0.422885,0.000000,), //128\nvec3f(0.928477,0.371391,0.000000,), //129\nvec3f(0.948683,0.316228,0.000000,), //130\nvec3f(0.966235,0.257663,0.000000,), //131\nvec3f(0.980581,0.196116,0.000000,), //132\nvec3f(0.991228,0.132164,0.000000,), //133\nvec3f(0.997785,0.066519,0.000000,), //134\nvec3f(1.000000,0.000000,0.000000,), //135\nvec3f(0.590370,0.577251,0.564132,), //136\nvec3f(0.603443,0.590033,0.536394,), //137\nvec3f(0.617773,0.562860,0.549132,), //138\nvec3f(0.616381,0.602683,0.506802,), //139\nvec3f(0.631676,0.575527,0.519378,), //140\nvec3f(0.646963,0.546324,0.531947,), //141\nvec3f(0.629078,0.615099,0.475304,), //142\nvec3f(0.645364,0.587999,0.487609,), //143\nvec3f(0.661693,0.558763,0.499946,), //144\nvec3f(0.677938,0.527285,0.512220,), //145\nvec3f(0.641419,0.627165,0.441866,), //146\nvec3f(0.658709,0.600157,0.453777,), //147\nvec3f(0.676100,0.570929,0.465757,), //148\nvec3f(0.693458,0.539356,0.477715,), //149\nvec3f(0.710625,0.505333,0.489542,), //150\nvec3f(0.653273,0.638755,0.406481,), //151\nvec3f(0.671567,0.611872,0.417864,), //152\nvec3f(0.690025,0.582688,0.429349,), //153\nvec3f(0.708508,0.551062,0.440849,), //154\nvec3f(0.726847,0.516869,0.452260,), //155\nvec3f(0.744845,0.480011,0.463459,), //156\nvec3f(0.664501,0.649734,0.369167,), //157\nvec3f(0.683783,0.623002,0.379880,), //158\nvec3f(0.703297,0.593895,0.390720,), //159\nvec3f(0.722897,0.562253,0.401610,), //160\nvec3f(0.742409,0.527935,0.412449,), //161\nvec3f(0.761619,0.490821,0.423122,), //162\nvec3f(0.780282,0.450829,0.433490,), //163\nvec3f(0.674958,0.659959,0.329979,), //164\nvec3f(0.695193,0.633398,0.339872,), //165\nvec3f(0.715730,0.604394,0.349912,), //166\nvec3f(0.736420,0.572771,0.360027,), //167\nvec3f(0.757078,0.538367,0.370127,), //168\nvec3f(0.777482,0.501044,0.380102,), //169\nvec3f(0.797366,0.460700,0.389823,), //170\nvec3f(0.816429,0.417286,0.399143,), //171\nvec3f(0.684495,0.669284,0.289009,), //172\nvec3f(0.705627,0.642905,0.297932,), //173\nvec3f(0.727132,0.614022,0.307011,), //174\nvec3f(0.748857,0.582444,0.316184,), //175\nvec3f(0.770611,0.547990,0.325369,), //176\nvec3f(0.792160,0.510503,0.334468,), //177\nvec3f(0.813224,0.469862,0.343361,), //178\nvec3f(0.833476,0.425999,0.351912,), //179\nvec3f(0.852554,0.378913,0.359967,), //180\nvec3f(0.692964,0.677565,0.246387,), //181\nvec3f(0.714916,0.651368,0.254193,), //182\nvec3f(0.737309,0.622616,0.262154,), //183\nvec3f(0.759988,0.591101,0.270218,), //184\nvec3f(0.782757,0.556627,0.278314,), //185\nvec3f(0.805371,0.519017,0.286354,), //186\nvec3f(0.827536,0.478132,0.294235,), //187\nvec3f(0.848906,0.433885,0.301833,), //188\nvec3f(0.869089,0.386262,0.309009,), //189\nvec3f(0.887659,0.335338,0.315612,), //190\nvec3f(0.700225,0.684664,0.202287,), //191\nvec3f(0.722897,0.658640,0.208837,), //192\nvec3f(0.746073,0.630017,0.215532,), //193\nvec3f(0.769596,0.598575,0.222328,), //194\nvec3f(0.793267,0.564101,0.229166,), //195\nvec3f(0.816833,0.526403,0.235974,), //196\nvec3f(0.839985,0.485325,0.242662,), //197\nvec3f(0.862360,0.440762,0.249126,), //198\nvec3f(0.883543,0.392686,0.255246,), //199\nvec3f(0.903076,0.341162,0.260889,), //200\nvec3f(0.920478,0.286371,0.265916,), //201\nvec3f(0.706149,0.690456,0.156922,), //202\nvec3f(0.729421,0.664583,0.162093,), //203\nvec3f(0.753250,0.636078,0.167389,), //204\nvec3f(0.777482,0.604708,0.172774,), //205\nvec3f(0.801911,0.570248,0.178202,), //206\nvec3f(0.826279,0.532491,0.183618,), //207\nvec3f(0.850268,0.491266,0.188949,), //208\nvec3f(0.873498,0.446455,0.194111,), //209\nvec3f(0.895533,0.398015,0.199007,), //210\nvec3f(0.915891,0.346003,0.203531,), //211\nvec3f(0.934060,0.290597,0.207569,), //212\nvec3f(0.949528,0.232107,0.211006,), //213\nvec3f(0.710625,0.694833,0.110542,), //214\nvec3f(0.734358,0.669081,0.114233,), //215\nvec3f(0.758690,0.640672,0.118018,), //216\nvec3f(0.783468,0.609364,0.121873,), //217\nvec3f(0.808485,0.574922,0.125764,), //218\nvec3f(0.833476,0.537129,0.129652,), //219\nvec3f(0.858116,0.495800,0.133485,), //220\nvec3f(0.882014,0.450807,0.137202,), //221\nvec3f(0.904717,0.402096,0.140734,), //222\nvec3f(0.925722,0.349717,0.144001,), //223\nvec3f(0.944495,0.293843,0.146921,), //224\nvec3f(0.960495,0.234788,0.149410,), //225\nvec3f(0.973215,0.173016,0.151389,), //226\nvec3f(0.713567,0.697710,0.063428,), //227\nvec3f(0.737606,0.672041,0.065565,), //228\nvec3f(0.762274,0.643698,0.067758,), //229\nvec3f(0.787416,0.612435,0.069993,), //230\nvec3f(0.812825,0.578009,0.072251,), //231\nvec3f(0.838235,0.540196,0.074510,), //232\nvec3f(0.863312,0.498802,0.076739,), //233\nvec3f(0.887659,0.453692,0.078903,), //234\nvec3f(0.910812,0.404805,0.080961,), //235\nvec3f(0.932255,0.352185,0.082867,), //236\nvec3f(0.951436,0.296002,0.084572,), //237\nvec3f(0.967798,0.236573,0.086026,), //238\nvec3f(0.980814,0.174367,0.087183,), //239\nvec3f(0.990028,0.110003,0.088002,), //240\nvec3f(0.714916,0.699029,0.015887,), //241\nvec3f(0.739097,0.673399,0.016424,), //242\nvec3f(0.763920,0.645088,0.016976,), //243\nvec3f(0.789231,0.613846,0.017538,), //244\nvec3f(0.814822,0.579429,0.018107,), //245\nvec3f(0.840424,0.541607,0.018676,), //246\nvec3f(0.865705,0.500185,0.019238,), //247\nvec3f(0.890260,0.455022,0.019784,), //248\nvec3f(0.913623,0.406055,0.020303,), //249\nvec3f(0.935270,0.353324,0.020784,), //250\nvec3f(0.954642,0.297000,0.021214,), //251\nvec3f(0.971173,0.237398,0.021582,), //252\nvec3f(0.984327,0.174991,0.021874,), //253\nvec3f(0.993641,0.110405,0.022081,), //254\nvec3f(0.998768,0.044390,0.022195,), //255\n\n);",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "188",
					"g": "155",
					"b": "155",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn putarX(\n\tr:f32,\n)->mat4x4f{\n\tlet s = sin(r);\n\tlet c = cos(r);\n\tlet m = mat4x4f(\n\t\t1,0,0,0,\n\t\t0,c,s,0,\n\t\t0,-s,c,0,\n\t\t0,0,0,1,\n\t);\n\treturn m;\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "0",
					"b": "0",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn putarY(\n\tr:f32,\n)->mat4x4f{\n\tlet s = sin(r);\n\tlet c = cos(r);\n\tlet m = mat4x4f(\n\t\tc,0,s,0,\n\t\t0,1,0,0,\n\t\t-s,0,c,0,\n\t\t0,0,0,1,\n\t);\n\treturn m;\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "0",
					"g": "255",
					"b": "0",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn putarZ(\n\tr:f32,\n)->mat4x4f{\n\tlet s = sin(r);\n\tlet c = cos(r);\n\tlet m = mat4x4f(\n\t\tc,s,0,0,\n\t\t-s,c,0,0,\n\t\t0,0,1,0,\n\t\t0,0,0,1,\n\t);\n\treturn m;\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "0",
					"g": "0",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn fcam()->mat4x4f{\n\treturn array(\n\t\tmisc.persp*camresoread[0],\n\t\tmisc.view,\n\t)[misc.freecam];\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "122",
					"g": "122",
					"b": "155",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn fnor(\n\tm:mat4x4f,\n\tn:vec3f,\n)->vec3f{\n\treturn mat3x3f(\n\t\tm[0].xyz,\n\t\tm[1].xyz,\n\t\tm[2].xyz,\n\t)*(n*2.-1.);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "122",
					"g": "188",
					"b": "0",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn corak0(\n\tp:vec3f,\n)-> bool {\n\tlet x = p.x;\n\tlet y = p.y;\n\tlet z = p.z;\n\t\n\treturn sin(sin(x*z)) < pow(5.,sin(z*sin(x+y)),)*sin(9.*x);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn fsinar(\n\twarna:vec3f,\n\tnor:vec3f,\n)->vec3f{\n\tlet berat = dot(\n\t\tnor,\n\t\tarahsiang,\n\t);\n\tlet wb = wbs;\n\tlet wd = wds;\n\tlet wbaru = select(wb,wd,.0 < berat,);\n\treturn mix(warna,wbaru.xyz,wbaru.w,);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "188",
					"g": "188",
					"b": "222",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn cublerp(t: f32) -> f32 { //cubic_interp\n    let clamped_t = clamp(t, 0.0, 1.0);\n    return clamped_t * clamped_t * (3.0 - 2.0 * clamped_t);\n}\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "255",
					"b": "255",
					"frame": "0"
				}
			]
		},
		{
			"text": "\n//dari tour to wgsl, 27 Agustus 2025\nfn acakbit(\n\tp:vec3f,\n\tt:u32, //time\n)->f32{\n\tlet x = bitcast<u32>(atan(p.x));\n\tlet y = bitcast<u32>(tanh(p.y));\n\tlet z = bitcast<u32>(sinh(p.z));\n\tlet v = (x * (y >> x) + t) * (y << (x + t));\n\tvar vcast = bitcast<f32>(v);\n\tvcast = select(vcast,sin(f32(t)),is_nan(vcast) || is_inf(vcast),);\n\t\n\treturn sin(vcast)*.5+.5;\n}\n\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "255",
					"g": "0",
					"b": "155",
					"frame": "0"
				}
			]
		},
		{
			"text": "\nfn is_nan(\n\tv:f32,\n) -> bool{\n\treturn v != v;\n}\n\n\n\n\n\nfn is_inf(x: f32) -> bool {\n    let bits: u32 = bitcast<u32>(x);\n    let exp  = (bits >> 23u) & 0xffu;\n    let mant = bits & 0x7fffffu;\n    return exp == 0xffu && mant == 0u;\n}\n\n",
			"visible": true,
			"time": "0",
			"speed": "1",
			"running": false,
			"color": [
				{
					"r": "155",
					"g": "155",
					"b": "255",
					"frame": "0"
				}
			]
		}
	]
]